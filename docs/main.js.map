{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/fileoperation.service.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendXmlUrl: 'http://localhost:9091/api/v1/nomiIndi/',\n  backendJsonUrl: 'http://localhost:9092/nomiIndi/json/',\n  testUrl: 'https://file-examples-com.github.io/uploads/2017/02/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport Swal, { SweetAlertIcon } from 'sweetalert2';\r\nimport { FileoperationService } from './services/fileoperation.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Nomina Electronica';\r\n  // companies = [\"01\", \"02\", \"03\"];\r\n  // instances = [\"NOMUSD01\", \"NOMUSD02\"];\r\n  operations = [\"Generar XML\", \"Generar JSON\", \"Generar y descargar XML\", \"Generar y descargar JSON\"];\r\n\r\n  company = \"\";\r\n  instance = \"\";\r\n  cargando = false;\r\n\r\n  constructor(private mOperation: FileoperationService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  guardar(mForm: NgForm) {\r\n    if (mForm.invalid) {\r\n      Object.values(mForm.controls).forEach(campo => campo.markAsTouched());\r\n      return;\r\n    }\r\n\r\n    this.company=mForm.controls.company.value.toUpperCase();\r\n    this.instance=mForm.controls.instance.value.toUpperCase();\r\n    this.cargando=true;\r\n\r\n    switch (mForm.controls.operation.value) {\r\n      case 'Generar XML':\r\n        this.GenerateXMLFile();\r\n        break;\r\n\r\n      case 'Generar JSON':\r\n        this.GenerateJSONFile();\r\n        break;\r\n\r\n      case 'Generar y descargar XML':\r\n        this.DownloadXMLFile();\r\n        break;\r\n\r\n      case 'Generar y descargar JSON':\r\n        this.DownloadJSONFile();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  GenerateXMLFile() { \r\n    this.mOperation.GenerateXMLFile(this.company, this.instance).subscribe(\r\n      (resp) => {\r\n        this.display(\"Archivo XML Creado exitosamente\", 'success');\r\n      },\r\n      (error) => {\r\n        this.display(\"Problemas en la generaci贸n del archivo XML\", 'error');\r\n      }\r\n    );\r\n  }\r\n\r\n  GenerateJSONFile() {\r\n    this.mOperation.GenerateJSONFile(this.company, this.instance).subscribe(\r\n      (resp) => {\r\n        this.display(\"Archivo JSON Creado exitosamente\", 'success');\r\n      },\r\n      (error) => {\r\n        this.display(\"Problemas en la generaci贸n del archivo JSON\", 'error');\r\n      }\r\n    );\r\n  }\r\n  \r\n  DownloadXMLFile() {\r\n    this.mOperation.DownloadXMLFile(this.company, this.instance).subscribe(\r\n      (resp) => {\r\n        this.display(\"Archivo XML Creado exitosamente\", 'success');\r\n        this.download(resp);\r\n      },\r\n      (error) => {\r\n        this.display(\"Problemas en la generaci贸n/descarga del archivo XML\", 'error');\r\n      }\r\n    );\r\n  }\r\n  \r\n  DownloadJSONFile() {\r\n    this.mOperation.DownloadJSONFile(this.company, this.instance).subscribe(\r\n      (resp) => {\r\n        this.display(\"Archivo JSON Creado exitosamente\", 'success');\r\n        this.download(resp);\r\n      },\r\n      (error) => {\r\n        this.display(\"Problemas en la generaci贸n/descarga del archivo JSON\", 'error');\r\n      }\r\n    );\r\n  }\r\n\r\n  download(resp: Blob) {\r\n    console.log(\"Descargando\");\r\n    let a = document.createElement(\"a\");\r\n          a.href = URL.createObjectURL(resp);\r\n          a.download = (this.company + \"-\" + this.instance);\r\n          a.click();\r\n          this.cargando=false;\r\n  }\r\n\r\n  display(mensaje: string, tipo: SweetAlertIcon)\r\n  {\r\n    console.log(mensaje);\r\n    this.cargando=false;\r\n    Swal.fire({\r\n      icon: tipo,\r\n      text: mensaje,\r\n      confirmButtonText: 'Aceptar',\r\n      confirmButtonColor: '#0d6efd'\r\n    });\r\n  }\r\n\r\n}","<div class=\"container shadow mt-5\">\r\n\r\n  <div class=\"row align-items-center\">\r\n    <div class=\"col\">\r\n      <a class=\"navbar-brand\" href=\"https://www.tlm.com.co/\">\r\n        <img src=\"assets\\TLM_logo.png\" alt=\"TLM logo\">\r\n      </a>\r\n    </div>\r\n    <div class=\"col\">\r\n      <h1>\r\n        {{title}}\r\n      </h1>\r\n    </div>\r\n  </div>\r\n\r\n\r\n<hr>\r\n\r\n<form autocomplete=\"off\" (ngSubmit)=\"guardar(mFormu)\" #mFormu=\"ngForm\">\r\n  \r\n  <div class=\"row mb-3\">\r\n    <label class=\"col-sm-2 col-3 col-form-label\">Compa帽铆a</label>\r\n    <div class=\"col\">\r\n      <input class=\"form-control\"\r\n              type=\"text\"\r\n              name=\"company\"\r\n              [ngModel]=\"company\"\r\n              [class.is-invalid]=\"companySel.invalid && companySel.touched\"\r\n              required minlength=\"2\"\r\n              style=\"text-transform:uppercase\"\r\n              placeholder=\"Digite compa帽铆a\"\r\n              #companySel=\"ngModel\"\r\n              [disabled]=\"cargando\">\r\n      <span *ngIf=\"companySel.invalid && companySel.touched\" class=\"form-text text-danger\">Debe contener al menos 2 letras</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mb-3\">\r\n    <label class=\"col-sm-2 col-3 col-form-label\">Instancia</label>\r\n    <div class=\"col\">\r\n      <input class=\"form-control\"\r\n              type=\"text\"\r\n              name=\"instance\"\r\n              [ngModel]=\"instance\"\r\n              [class.is-invalid]=\"instanceSel.invalid && instanceSel.touched\"\r\n              style=\"text-transform:uppercase\"\r\n              required minlength=\"5\"\r\n              placeholder=\"Digite instancia\"\r\n              #instanceSel=\"ngModel\"\r\n              [disabled]=\"cargando\">\r\n      <span *ngIf=\"instanceSel.invalid && instanceSel.touched\" class=\"form-text text-danger\">Debe contener al menos 5 letras</span>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mb-3\">\r\n    <label class=\"col-sm-2 col-3 col-form-label\">Operaci贸n</label>\r\n    <div class=\"col\">\r\n      <div *ngFor=\"let operation of operations; let idOper=index\" class=\"form-check\">\r\n        <input class=\"form-check-input\"\r\n            type=\"radio\" \r\n            name=\"operation\"\r\n            [id]=\"idOper\"\r\n            [value]=\"operation\"\r\n            [class.is-invalid]=\"operation.invalid && operation.touched\"\r\n            required\r\n            [ngModel]=\"operation\"\r\n            [disabled]=\"cargando\">\r\n        <label class=\"form-check-label\" [for]=\"idOper\">{{operation}}</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n    <div class=\"d-grid\">\r\n      <button *ngIf=\"!cargando\" type=\"submit\" class=\"btn btn-outline-primary my-3\">\r\n        Ejecutar operaci贸n\r\n      </button>\r\n\r\n      <button *ngIf=\"cargando\" class=\"btn btn-primary\" type=\"button\" disabled>\r\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        Ejecutando...\r\n      </button>\r\n    </div>\r\n\r\n</form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileoperationService {\r\n\r\n  constructor(private mHttpClient:HttpClient) { }\r\n\r\n\r\n  GenerateXMLFile(company:string, instance:string) {\r\n    return this.mHttpClient.get(environment.backendXmlUrl + 'xmlAll/' + company);\r\n  }\r\n  \r\n  GenerateJSONFile(company:string, instance:string) {\r\n    return this.mHttpClient.get(environment.backendJsonUrl + company);\r\n  }\r\n  \r\n  DownloadXMLFile(company:string, instance:string) {\r\n    return this.mHttpClient.get(environment.testUrl + 'file_example_XML_24kb.xml', {responseType:'blob'});\r\n    // return this.mHttpClient.get(environment.backendXmlUrl + 'downloadXmlAll/' + company, {responseType:'blob'});\r\n  }\r\n  \r\n  DownloadJSONFile(company:string, instance:string) {\r\n    return this.mHttpClient.get(environment.testUrl + 'file_example_JSON_1kb.json', {responseType:'blob'});\r\n    // return this.mHttpClient.get(environment.backendJsonUrl + 'download/' + company, {responseType:'blob'});\r\n  }\r\n\r\n}","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}